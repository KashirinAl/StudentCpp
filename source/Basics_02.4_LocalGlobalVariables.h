// Рассматриваемые темы:
// Подробнее про локальные и глобальные переменные

#pragma once

#include <iostream>
using namespace std;

namespace LocalGlobalVariables
{
    int count; // "Глобальная"

    void func1()
    {
        int x = 10;

        count++; // Внутри ф-ции мы не объявляли переменную count
                 // Но она все равно доступна, и мы увеличиваем ее значение
    }

    void func2()
    {
        int x = -199;

        count++; // Та же ситуация
    }

    void main()
    {
        count = 0; // В начале программы обнуляем значение переменной
        // То же самое - внутри main не было объявления переменной,
        // но доступ к ней мы имеем

        int t; // А вот это уже локальная переменная
        cin >> t;

        if (t == 1)
        {
            char buf[80];

            cout << "Введите имя:";
            cin >> buf;
        }

        func1(); func2(); func1();

        cout << count << endl; // И что выведется на экран?

        // Если очень кратко:
        // ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ - ПЛОХО! НЕ ИСПОЛЬЗУЙТЕ ИХ.

        // Если кратко:
        // 1. Глобальные переменные хранятся на протяжение выполнения всей программы
        // Т.е. занимают под себя место. 
        // 2. Имя глобальной переменной занято. Создание локальной переменной в таким же именем
        // затруднит чтение кода.
        // 3. Алгоритм программы становится менее прозрачным, потому что вам нужно знать про все глобальные
        // переменные, какие есть в коде.

        // Если хотите более развернутого ответа, то можете погуглить.
        // Например, http://www.gunsmoker.ru/2011/04/blog-post.html
    }

    
}